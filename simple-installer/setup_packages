#!/usr/bin/env bash

set -o nounset

declare -A install_list

lockfile="/var/lock/subsys/setup_kazoo.lockfile"
. /opt/kazoo_install/setup_common

trap error_exit SIGHUP SIGTERM EXIT
trap int_exit SIGINT SIGQUIT

dir="/opt/kazoo_install/"

all_in_one=""

wait_apps_running(){
    dbg "Waiting for whapps to start by polling: ${NC}/opt/kazoo/utils/sup/sup whapps_controller list_apps"

    while
    /opt/kazoo/utils/sup/sup whapps_controller list_apps &> /dev/null
    (( $? != 0 ))
    do
        continue
    done

    dbg "Waiting for ecallmgr to start by polling: ${NC}/opt/kazoo/utils/sup/sup -necallmgr ecallmgr_maintenance list_fs_nodes"

    while
    /opt/kazoo/utils/sup/sup -necallmgr ecallmgr_maintenance list_fs_nodes &> /dev/null
    (( $? != 0 ))
    do
        continue
    done
}

handle_args(){

    while getopts "ai:" opt;do
        case $opt in
            i)
                dbg "Installer requested setup of package $OPTARG"
                install_list["$OPTARG"]=1
                ;;
            a)
                echo "All in one selected, setting up all services."
                all_in_one=1
                ;;
        esac
    done

}

do_setup(){
    for package in ${!install_list[@]}; do
        package_setup="${dir}setup_${package}"
        dbg "Running ${NC} $package_setup ${green}for package${NC} $package"
        if [[ -n $all_in_one ]]; then 
           $package_setup -a || error_exit "package setup failed for $package in script: ${NC}$package_setup"
        else
           $package_setup || error_exit "package setup failed for $package in script: ${NC}$package_setup"
        fi
    done
}

do_final_steps(){
    if  [[ ${install_list['haproxy']:-} ]]; then
        dbg "Createing symlink to use HA proxy config in /etc/kazoo/haproxy instead of /etc/haproxy"
        rm -rf /etc/haproxy/haproxy.cfg
        ln -s /etc/kazoo/haproxy/haproxy.cfg /etc/haproxy/haproxy.cfg
        dbg "Restart HAProxy to apply changes with: ${NC} service haproxy restart"
        /sbin/service haproxy restart || error_exit "haproxy restart failed"
    fi 

    #TODO: SETUP BASIC IP TABLES ENTRIES PER SERVICE!!!!!!
    warn "Dude, We are stopping IP tables, that means your shields are down brother, might wanna do something about it!!"
    service iptables stop 

    #start services
    dbg "Restart Rsyslog"
    /sbin/service rsyslog restart || error "rsyslon failed to start"


    if [[ ${install_list['freeswitch']:-} ]];then
        dbg "Start EPMD with: ${NC} /usr/bin/epmd -daemon"
        /usr/bin/epmd -daemon || error_exit "epmd daemon failed to start"
        dbg "Epmd status is: "
        netstat -ptlen | grep epmd
    fi 

    if [[ ${install_list['bigcouch']:-} ]];then 
        dbg "Restart Bigcouch to apply changes with:${NC} service bigcouch restart"
        /sbin/service bigcouch restart || error_exit "Bigcouch restart failed"
    fi 

    if [[ ${install_list['rabbitmq']:-} ]];then 
        dbg "Start RabbitMQ with: ${NC} service rabbitmq-server restart"
        /sbin/service rabbitmq-server restart || error_exit "Rabbitqm restart failed"
    fi 

    if [[ ${install_list['freeswitch']:-} ]];then 
        dbg "Start FreeSWITCH with: ${NC} service freeswitch restart"
        /sbin/service freeswitch restart || error_exit "Freeswitch restart failed"
    fi 

    if [[ ${install_list['bigcouch']:-} ]];then 
        dbg "Restart Kamailio to apply the changes with: ${NC} service kamailio restart"
        /sbin/service kamailio restart || error_exit "Kamailio restart failed"
    fi

    if [[ ${install_list['kazoo']:-} ]];then 
        dbg "Start Whapps with: ${NC} service kz-whistle_apps restart"
        /sbin/service kz-whistle_apps restart

        dbg "Start ecallmgr with: ${NC} service kz-ecallmgr restart"
        /sbin/service kz-ecallmgr restart || error_exit "kz-ecallmgr restart failed"

        wait_apps_running

        dbg "Displaying whistle_apps status with: ${NC} service kz-whistle_apps status "
        /sbin/service kz-whistle_apps status 
    fi  


    dbg "Attach ecallmgr to FreeSWITCH with: ${NC} sup -n ecallmgr ecallmgr_maintenance add_fs_node freeswitch@${system_hostname}"
    /opt/kazoo/utils/sup/sup -n ecallmgr ecallmgr_maintenance add_fs_node freeswitch@${system_hostname}

    if [[ ${install_list['kazoo']:-} ]];then 
        dbg "Starting httpd"
        /sbin/service httpd restart || error_exit "httpd restart failed"
    fi


    if [[ ${install_list['bigcouch']:-} ]];then 
        dbg "Updating all Bigcouch views with: ${NC} sup whapps_maintenance blocking_refresh"
        /opt/kazoo/utils/sup/sup whapps_maintenance blocking_refresh || error_exit "sup whapps_maintenance blocking_refresh failed!"

        dbg "Importing media files with: ${NC} /opt/kazoo/utils/media_importer/media_importer /opt/kazoo/system_media/*.wav "
        /opt/kazoo/utils/media_importer/media_importer /opt/kazoo/system_media/*.wav || error_exit "media import command failed"

        #Create new account
        dbg "Created admin account with: ${NC} sup crossbar_maintenance create_account admin sip.${system_hostname} admin admin"
        /opt/kazoo/utils/sup/sup crossbar_maintenance create_account admin "sip.${system_hostname}" admin admin || error_exit "Account creation failed"
    fi 
    
    if [[ ${install_list['kazoo-ui']:-} ]]; then
        info "You can access the kazoo-ui by going to http://$system_ip_address/kazoo-ui"
    fi

}
check_root
check_lock
handle_args $@
ask_ip_selection
get_system_hostname
[ ${all_in_one:-} ] && generate_erlang_cookie
do_setup
do_final_steps
info "INSTALL COMPLETE!"
clean_exit



